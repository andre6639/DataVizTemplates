(function (d3) {
  'use strict';

  // Generated with https://paletton.com/#uid=7000B0kgKpN8xAycxtVl9lvpMg+
  const colors = [
    ['#CD6262', '#FFBBBB', '#EE9191', '#AB3A3A', '#871A1A'],
    ['#CD9A62', '#FFDEBB', '#EEC291', '#AB753A', '#87531A'],
    ['#406F81', '#83A4B0', '#5E8696', '#27596B', '#134355'],
    ['#4EA44E', '#9CD59C', '#74BF74', '#2E892E', '#156C15'],
  ];

  const links = [
    // { source: 0, target: 1 }, // Arts Web → Community Vision
    // { source: 0, target: 2 }, // Arts Web → Silicon Valley Creates
  ];

  const nodes = [];
  const MAIN_NODE_SIZE = 35;
  const CHILD_NODE_SIZE = 10;
  const LEAF_NODE_SIZE = 5;
  const DEFAULT_DISTANCE = 20;
  const MAIN_NODE_DISTANCE = 90;
  const LEAF_NODE_DISTANCE = 30;
  const MANY_BODY_STRENGTH = -20;

  let i = 0;
  const addMainNode = (node) => {
    node.size = MAIN_NODE_SIZE;
    node.color = colors[i++][1];
    nodes.push(node);
  };

  const addChildNode = (
    parentNode,
    childNode,
    size = CHILD_NODE_SIZE,
    distance = DEFAULT_DISTANCE
  ) => {
    childNode.size = size;
    childNode.color = parentNode.color;
    nodes.push(childNode);
    links.push({
      source: parentNode,
      target: childNode,
      distance,
      color: parentNode.color,
    });
  };

  const assembleChildNode = (
    parentNode,
    id,
    numLeaves = 20
  ) => {
    const childNode = { id };
    addChildNode(parentNode, childNode);

    for (let i = 0; i < numLeaves; i++) {
      addChildNode(
        childNode,
        { id: '' },
        LEAF_NODE_SIZE,
        LEAF_NODE_DISTANCE
      );
    }
  };

  const connectMainNodes = (source, target) => {
    links.push({
      source,
      target,
      distance: MAIN_NODE_DISTANCE,
      color: source.color,
    });
  };

  const artsWeb = { id: 'Arts Web' };
  addMainNode(artsWeb);
  assembleChildNode(artsWeb, 'Community Vision');
  assembleChildNode(artsWeb, 'Silicon Valley Creates');

  const socialImpactCommons = { id: 'Social Impact Commons' };
  addMainNode(socialImpactCommons);
  assembleChildNode(socialImpactCommons, 'Theatre Bay Area');
  assembleChildNode(
    socialImpactCommons,
    'EastSide Arts Alliance'
  );
  assembleChildNode(socialImpactCommons, 'Local Color');

  const cast = { id: 'Community Arts Stabilization Trust' };
  addMainNode(cast);
  assembleChildNode(cast, 'CounterPulse');
  assembleChildNode(cast, 'Luggage Store Gallery');
  assembleChildNode(cast, 'Performing Arts Workshop');
  assembleChildNode(cast, '447 Mina St.', 5);
  assembleChildNode(cast, 'Keeping Space Oakland');

  const ambitioUS = { id: 'AmbitioUS' };
  addMainNode(ambitioUS);
  assembleChildNode(ambitioUS, 'EBPREC');
  assembleChildNode(ambitioUS, 'SELC', 3);
  assembleChildNode(ambitioUS, 'The Runway Project', 3);
  assembleChildNode(ambitioUS, 'Common Future', 3);
  assembleChildNode(ambitioUS, 'Freelancers Union ', 3);
  assembleChildNode(
    ambitioUS,
    'US Federation of Worker Cooperatives',
    3
  );

  connectMainNodes(artsWeb, socialImpactCommons);
  connectMainNodes(artsWeb, cast);
  connectMainNodes(socialImpactCommons, cast);
  connectMainNodes(ambitioUS, cast);
  connectMainNodes(ambitioUS, socialImpactCommons);
  connectMainNodes(ambitioUS, artsWeb);

  // Community Arts Stabilization Trust

  const svg = d3.select('#container');
  const width = +svg.attr('width');
  const height = +svg.attr('height');
  const centerX = width / 2;
  const centerY = height / 2;

  const simulation = d3.forceSimulation(nodes)
    .force('charge', d3.forceManyBody().strength(MANY_BODY_STRENGTH))
    .force('link', d3.forceLink(links).distance(link => link.distance))
    .force('center', d3.forceCenter(centerX, centerY));

  const dragInteraction = d3.drag().on("drag", (event, node) => {
  	node.fx = event.x;
    node.fy = event.y;
    simulation.alpha(1);
    simulation.restart();
  });

  const lines = svg
    .selectAll('line')
    .data(links)
    .enter()
    .append('line')
    .attr('stroke', link => link.color || 'black');

  const circles = svg
    .selectAll('circle')
    .data(nodes)
    .enter()
    .append('circle')
  	.attr('fill', (node) => node.color || 'gray')
    .attr('r', (node) => node.size)
  	.call(dragInteraction);

  const text = svg
    .selectAll('text')
    .data(nodes)
    .enter()
    .append('text')
    .attr('text-anchor', 'middle')
  	.attr('alignment-baseline', 'middle')
  	.style('pointer-events', 'none')
    .text((node) => node.id);

  simulation.on('tick', () => {
    circles
      .attr('cx', (node) => node.x)
      .attr('cy', (node) => node.y);
    text
      .attr('x', (node) => node.x)
      .attr('y', (node) => node.y);

    lines
      .attr('x1', (link) => link.source.x)
      .attr('y1', (link) => link.source.y)
      .attr('x2', (link) => link.target.x)
      .attr('y2', (link) => link.target.y);
  });

}(d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImNvbG9ycy5qcyIsImRhdGEuanMiLCJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIEdlbmVyYXRlZCB3aXRoIGh0dHBzOi8vcGFsZXR0b24uY29tLyN1aWQ9NzAwMEIwa2dLcE44eEF5Y3h0Vmw5bHZwTWcrXG5leHBvcnQgY29uc3QgY29sb3JzID0gW1xuICBbJyNDRDYyNjInLCAnI0ZGQkJCQicsICcjRUU5MTkxJywgJyNBQjNBM0EnLCAnIzg3MUExQSddLFxuICBbJyNDRDlBNjInLCAnI0ZGREVCQicsICcjRUVDMjkxJywgJyNBQjc1M0EnLCAnIzg3NTMxQSddLFxuICBbJyM0MDZGODEnLCAnIzgzQTRCMCcsICcjNUU4Njk2JywgJyMyNzU5NkInLCAnIzEzNDM1NSddLFxuICBbJyM0RUE0NEUnLCAnIzlDRDU5QycsICcjNzRCRjc0JywgJyMyRTg5MkUnLCAnIzE1NkMxNSddLFxuXTtcbiIsImltcG9ydCB7IGNvbG9ycyB9IGZyb20gJy4vY29sb3JzJztcblxuZXhwb3J0IGNvbnN0IGxpbmtzID0gW1xuICAvLyB7IHNvdXJjZTogMCwgdGFyZ2V0OiAxIH0sIC8vIEFydHMgV2ViIMOiwobCkiBDb21tdW5pdHkgVmlzaW9uXG4gIC8vIHsgc291cmNlOiAwLCB0YXJnZXQ6IDIgfSwgLy8gQXJ0cyBXZWIgw6LChsKSIFNpbGljb24gVmFsbGV5IENyZWF0ZXNcbl07XG5cbmV4cG9ydCBjb25zdCBub2RlcyA9IFtdO1xuY29uc3QgTUFJTl9OT0RFX1NJWkUgPSAzNTtcbmNvbnN0IENISUxEX05PREVfU0laRSA9IDEwO1xuY29uc3QgTEVBRl9OT0RFX1NJWkUgPSA1O1xuY29uc3QgREVGQVVMVF9ESVNUQU5DRSA9IDIwO1xuY29uc3QgTUFJTl9OT0RFX0RJU1RBTkNFID0gOTA7XG5jb25zdCBMRUFGX05PREVfRElTVEFOQ0UgPSAzMDtcbmV4cG9ydCBjb25zdCBNQU5ZX0JPRFlfU1RSRU5HVEggPSAtMjA7XG5cbmxldCBpID0gMDtcbmNvbnN0IGFkZE1haW5Ob2RlID0gKG5vZGUpID0+IHtcbiAgbm9kZS5zaXplID0gTUFJTl9OT0RFX1NJWkU7XG4gIG5vZGUuY29sb3IgPSBjb2xvcnNbaSsrXVsxXTtcbiAgbm9kZXMucHVzaChub2RlKTtcbn07XG5cbmNvbnN0IGFkZENoaWxkTm9kZSA9IChcbiAgcGFyZW50Tm9kZSxcbiAgY2hpbGROb2RlLFxuICBzaXplID0gQ0hJTERfTk9ERV9TSVpFLFxuICBkaXN0YW5jZSA9IERFRkFVTFRfRElTVEFOQ0VcbikgPT4ge1xuICBjaGlsZE5vZGUuc2l6ZSA9IHNpemU7XG4gIGNoaWxkTm9kZS5jb2xvciA9IHBhcmVudE5vZGUuY29sb3I7XG4gIG5vZGVzLnB1c2goY2hpbGROb2RlKTtcbiAgbGlua3MucHVzaCh7XG4gICAgc291cmNlOiBwYXJlbnROb2RlLFxuICAgIHRhcmdldDogY2hpbGROb2RlLFxuICAgIGRpc3RhbmNlLFxuICAgIGNvbG9yOiBwYXJlbnROb2RlLmNvbG9yLFxuICB9KTtcbn07XG5cbmNvbnN0IGFzc2VtYmxlQ2hpbGROb2RlID0gKFxuICBwYXJlbnROb2RlLFxuICBpZCxcbiAgbnVtTGVhdmVzID0gMjBcbikgPT4ge1xuICBjb25zdCBjaGlsZE5vZGUgPSB7IGlkIH07XG4gIGFkZENoaWxkTm9kZShwYXJlbnROb2RlLCBjaGlsZE5vZGUpO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtTGVhdmVzOyBpKyspIHtcbiAgICBhZGRDaGlsZE5vZGUoXG4gICAgICBjaGlsZE5vZGUsXG4gICAgICB7IGlkOiAnJyB9LFxuICAgICAgTEVBRl9OT0RFX1NJWkUsXG4gICAgICBMRUFGX05PREVfRElTVEFOQ0VcbiAgICApO1xuICB9XG59O1xuXG5jb25zdCBjb25uZWN0TWFpbk5vZGVzID0gKHNvdXJjZSwgdGFyZ2V0KSA9PiB7XG4gIGxpbmtzLnB1c2goe1xuICAgIHNvdXJjZSxcbiAgICB0YXJnZXQsXG4gICAgZGlzdGFuY2U6IE1BSU5fTk9ERV9ESVNUQU5DRSxcbiAgICBjb2xvcjogc291cmNlLmNvbG9yLFxuICB9KTtcbn07XG5cbmNvbnN0IGFydHNXZWIgPSB7IGlkOiAnQXJ0cyBXZWInIH07XG5hZGRNYWluTm9kZShhcnRzV2ViKTtcbmFzc2VtYmxlQ2hpbGROb2RlKGFydHNXZWIsICdDb21tdW5pdHkgVmlzaW9uJyk7XG5hc3NlbWJsZUNoaWxkTm9kZShhcnRzV2ViLCAnU2lsaWNvbiBWYWxsZXkgQ3JlYXRlcycpO1xuXG5jb25zdCBzb2NpYWxJbXBhY3RDb21tb25zID0geyBpZDogJ1NvY2lhbCBJbXBhY3QgQ29tbW9ucycgfTtcbmFkZE1haW5Ob2RlKHNvY2lhbEltcGFjdENvbW1vbnMpO1xuYXNzZW1ibGVDaGlsZE5vZGUoc29jaWFsSW1wYWN0Q29tbW9ucywgJ1RoZWF0cmUgQmF5IEFyZWEnKTtcbmFzc2VtYmxlQ2hpbGROb2RlKFxuICBzb2NpYWxJbXBhY3RDb21tb25zLFxuICAnRWFzdFNpZGUgQXJ0cyBBbGxpYW5jZSdcbik7XG5hc3NlbWJsZUNoaWxkTm9kZShzb2NpYWxJbXBhY3RDb21tb25zLCAnTG9jYWwgQ29sb3InKTtcblxuY29uc3QgY2FzdCA9IHsgaWQ6ICdDb21tdW5pdHkgQXJ0cyBTdGFiaWxpemF0aW9uIFRydXN0JyB9O1xuYWRkTWFpbk5vZGUoY2FzdCk7XG5hc3NlbWJsZUNoaWxkTm9kZShjYXN0LCAnQ291bnRlclB1bHNlJyk7XG5hc3NlbWJsZUNoaWxkTm9kZShjYXN0LCAnTHVnZ2FnZSBTdG9yZSBHYWxsZXJ5Jyk7XG5hc3NlbWJsZUNoaWxkTm9kZShjYXN0LCAnUGVyZm9ybWluZyBBcnRzIFdvcmtzaG9wJyk7XG5hc3NlbWJsZUNoaWxkTm9kZShjYXN0LCAnNDQ3IE1pbmEgU3QuJywgNSk7XG5hc3NlbWJsZUNoaWxkTm9kZShjYXN0LCAnS2VlcGluZyBTcGFjZSBPYWtsYW5kJyk7XG5cbmNvbnN0IGFtYml0aW9VUyA9IHsgaWQ6ICdBbWJpdGlvVVMnIH07XG5hZGRNYWluTm9kZShhbWJpdGlvVVMpO1xuYXNzZW1ibGVDaGlsZE5vZGUoYW1iaXRpb1VTLCAnRUJQUkVDJyk7XG5hc3NlbWJsZUNoaWxkTm9kZShhbWJpdGlvVVMsICdTRUxDJywgMyk7XG5hc3NlbWJsZUNoaWxkTm9kZShhbWJpdGlvVVMsICdUaGUgUnVud2F5IFByb2plY3QnLCAzKTtcbmFzc2VtYmxlQ2hpbGROb2RlKGFtYml0aW9VUywgJ0NvbW1vbiBGdXR1cmUnLCAzKTtcbmFzc2VtYmxlQ2hpbGROb2RlKGFtYml0aW9VUywgJ0ZyZWVsYW5jZXJzIFVuaW9uICcsIDMpO1xuYXNzZW1ibGVDaGlsZE5vZGUoXG4gIGFtYml0aW9VUyxcbiAgJ1VTIEZlZGVyYXRpb24gb2YgV29ya2VyIENvb3BlcmF0aXZlcycsXG4gIDNcbik7XG5cbmNvbm5lY3RNYWluTm9kZXMoYXJ0c1dlYiwgc29jaWFsSW1wYWN0Q29tbW9ucyk7XG5jb25uZWN0TWFpbk5vZGVzKGFydHNXZWIsIGNhc3QpO1xuY29ubmVjdE1haW5Ob2Rlcyhzb2NpYWxJbXBhY3RDb21tb25zLCBjYXN0KTtcbmNvbm5lY3RNYWluTm9kZXMoYW1iaXRpb1VTLCBjYXN0KTtcbmNvbm5lY3RNYWluTm9kZXMoYW1iaXRpb1VTLCBzb2NpYWxJbXBhY3RDb21tb25zKTtcbmNvbm5lY3RNYWluTm9kZXMoYW1iaXRpb1VTLCBhcnRzV2ViKTtcblxuLy8gQ29tbXVuaXR5IEFydHMgU3RhYmlsaXphdGlvbiBUcnVzdFxuIiwiaW1wb3J0IHtcbiAgc2VsZWN0LFxuICBmb3JjZVNpbXVsYXRpb24sXG4gIGZvcmNlTWFueUJvZHksXG4gIGZvcmNlTGluayxcbiAgZm9yY2VDZW50ZXIsXG4gIGRyYWdcbn0gZnJvbSAnZDMnO1xuXG5pbXBvcnQgeyBub2RlcywgbGlua3MsIE1BTllfQk9EWV9TVFJFTkdUSCB9IGZyb20gJy4vZGF0YSc7XG5cbmNvbnN0IHN2ZyA9IHNlbGVjdCgnI2NvbnRhaW5lcicpO1xuY29uc3Qgd2lkdGggPSArc3ZnLmF0dHIoJ3dpZHRoJyk7XG5jb25zdCBoZWlnaHQgPSArc3ZnLmF0dHIoJ2hlaWdodCcpO1xuY29uc3QgY2VudGVyWCA9IHdpZHRoIC8gMjtcbmNvbnN0IGNlbnRlclkgPSBoZWlnaHQgLyAyO1xuXG5jb25zdCBzaW11bGF0aW9uID0gZm9yY2VTaW11bGF0aW9uKG5vZGVzKVxuICAuZm9yY2UoJ2NoYXJnZScsIGZvcmNlTWFueUJvZHkoKS5zdHJlbmd0aChNQU5ZX0JPRFlfU1RSRU5HVEgpKVxuICAuZm9yY2UoJ2xpbmsnLCBmb3JjZUxpbmsobGlua3MpLmRpc3RhbmNlKGxpbmsgPT4gbGluay5kaXN0YW5jZSkpXG4gIC5mb3JjZSgnY2VudGVyJywgZm9yY2VDZW50ZXIoY2VudGVyWCwgY2VudGVyWSkpO1xuXG5jb25zdCBkcmFnSW50ZXJhY3Rpb24gPSBkcmFnKCkub24oXCJkcmFnXCIsIChldmVudCwgbm9kZSkgPT4ge1xuXHRub2RlLmZ4ID0gZXZlbnQueDtcbiAgbm9kZS5meSA9IGV2ZW50Lnk7XG4gIHNpbXVsYXRpb24uYWxwaGEoMSk7XG4gIHNpbXVsYXRpb24ucmVzdGFydCgpO1xufSk7XG5cbmNvbnN0IGxpbmVzID0gc3ZnXG4gIC5zZWxlY3RBbGwoJ2xpbmUnKVxuICAuZGF0YShsaW5rcylcbiAgLmVudGVyKClcbiAgLmFwcGVuZCgnbGluZScpXG4gIC5hdHRyKCdzdHJva2UnLCBsaW5rID0+IGxpbmsuY29sb3IgfHwgJ2JsYWNrJyk7XG5cbmNvbnN0IGNpcmNsZXMgPSBzdmdcbiAgLnNlbGVjdEFsbCgnY2lyY2xlJylcbiAgLmRhdGEobm9kZXMpXG4gIC5lbnRlcigpXG4gIC5hcHBlbmQoJ2NpcmNsZScpXG5cdC5hdHRyKCdmaWxsJywgKG5vZGUpID0+IG5vZGUuY29sb3IgfHwgJ2dyYXknKVxuICAuYXR0cigncicsIChub2RlKSA9PiBub2RlLnNpemUpXG5cdC5jYWxsKGRyYWdJbnRlcmFjdGlvbik7XG5cbmNvbnN0IHRleHQgPSBzdmdcbiAgLnNlbGVjdEFsbCgndGV4dCcpXG4gIC5kYXRhKG5vZGVzKVxuICAuZW50ZXIoKVxuICAuYXBwZW5kKCd0ZXh0JylcbiAgLmF0dHIoJ3RleHQtYW5jaG9yJywgJ21pZGRsZScpXG5cdC5hdHRyKCdhbGlnbm1lbnQtYmFzZWxpbmUnLCAnbWlkZGxlJylcblx0LnN0eWxlKCdwb2ludGVyLWV2ZW50cycsICdub25lJylcbiAgLnRleHQoKG5vZGUpID0+IG5vZGUuaWQpO1xuXG5zaW11bGF0aW9uLm9uKCd0aWNrJywgKCkgPT4ge1xuICBjaXJjbGVzXG4gICAgLmF0dHIoJ2N4JywgKG5vZGUpID0+IG5vZGUueClcbiAgICAuYXR0cignY3knLCAobm9kZSkgPT4gbm9kZS55KTtcbiAgdGV4dFxuICAgIC5hdHRyKCd4JywgKG5vZGUpID0+IG5vZGUueClcbiAgICAuYXR0cigneScsIChub2RlKSA9PiBub2RlLnkpO1xuXG4gIGxpbmVzXG4gICAgLmF0dHIoJ3gxJywgKGxpbmspID0+IGxpbmsuc291cmNlLngpXG4gICAgLmF0dHIoJ3kxJywgKGxpbmspID0+IGxpbmsuc291cmNlLnkpXG4gICAgLmF0dHIoJ3gyJywgKGxpbmspID0+IGxpbmsudGFyZ2V0LngpXG4gICAgLmF0dHIoJ3kyJywgKGxpbmspID0+IGxpbmsudGFyZ2V0LnkpO1xufSk7XG4iXSwibmFtZXMiOlsic2VsZWN0IiwiZm9yY2VTaW11bGF0aW9uIiwiZm9yY2VNYW55Qm9keSIsImZvcmNlTGluayIsImZvcmNlQ2VudGVyIiwiZHJhZyJdLCJtYXBwaW5ncyI6Ijs7O0VBQ0E7RUFDTyxNQUFNLE1BQU0sR0FBRztFQUN0QixFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUN6RCxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUN6RCxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUN6RCxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMs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